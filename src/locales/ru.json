{
  "nav": {
    "title": "Тестовое задание для SquareGps",
    "task": "О задании",
    "map": "Карта",
    "languages": { "ru": "Русский", "en": "Английский" }
  },
  "tech": {
    "vue": "Vuejs",
    "vuex": "Vuex",
    "vueRouter": "VueRouter",
    "vuetify": "Vuetify"
  },
  "pages": {
    "task": {
      "title": "О задании",
      "desc": "Краткое описание, цели и требования."
    },
    "map": {
      "loadingAddress": "Загрузка адреса…",
      "addressNotFound": "Адрес не найден",
      "markers": "Маркеры",
      "marker": "Маркер №{number}",
      "noMarkers": "Маркеров пока нет",
      "coordinates": "Координаты:",
      "lat": "Широта: {lat}",
      "lng": "Долгота: {lng}",
      "markerNotifications": {
        "notification": "Установите точку на карте, щелкнув по нужному месту.",
        "addSuccess": "Маркер успешно добавлен.",
        "addError": "Ошибка добавления маркера."
      }
    },
    "taskPage": {
      "title": "Тестовое задание SquareGPS",
      "intro": "Необходимо с помощью {0}, {1}, {2}, {3} написать приложение. Хэдер приложения должен содержать меню из двух пунктов: «{4}» и «{5}». В основной части приложения должно отображаться содержимое разделов.",
      "section": {
        "about": "Раздел «О задании»",
        "map": "Раздел «Карта»"
      },
      "aboutText": "В разделе должен быть текст этого задания, свёрстанный аналогично.",
      "mapIntro": "На экране должны быть карта и список (см. пример):",
      "items": {
        "1": {
          "main": "1. При клике на кнопку добавления, карта должна перейти в режим добавления маркера: в месте клика должен появиться маркер, а в списке — запись с адресом точки.",
          "a": "a. Для поиска адреса можно использовать любое бесплатное API для геокодирования, например: {0}.",
          "b": "b. В случае, если адрес не найден, необходимо вывести ошибку и не добавлять маркер в список."
        },
        "2": "2. При клике на маркер должна подсвечиваться запись в списке.",
        "3": "3. При клике на запись в списке карта должна центрироваться на маркере.",
        "4": "4. Маркеры должны храниться локально и не пропадать после перезагрузки страницы.",
        "5": "5. В адресной строке должен отображаться id выбранного маркера."
      },
      "storageNote": "Локальное хранение данных должно быть организовано в виде сервиса, эмулирующего бекенд. (Необходим класс Backend, который псевдо-асинхронно сохраняет данные в {0}).",
      "extra": {
        "title": "Дополнительно:",
        "1": "1. Продумать отображение на мобильных устройствах.",
        "2": "2. Предусмотреть локализацию.",
        "3": "3. С помощью {0} написать 1 модульный тест на любой компонент."
      }
    }
  }
}
